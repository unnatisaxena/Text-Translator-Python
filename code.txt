from googletrans import Translator
from gtts import gTTS
import os
from IPython.display import Audio, display

def translate_text(text, src_lang='auto', dest_lang='en'):
    translator = Translator()
    try:
        translated = translator.translate(text, src=src_lang, dest=dest_lang)
        return translated.text
    except Exception as e:
        print(f"An error occurred during translation: {e}")
        return None

def text_to_audio(text, language='en', filename='output.mp3'):
    try:
        # Create a gTTS object with the provided text and language
        tts = gTTS(text=text, lang=language, slow=False)
        
        # Save the audio file
        tts.save(filename)
        
        print(f"Audio content written to file {filename}")
        print(f"File saved at: {os.path.abspath(filename)}")
        
        # Play the audio file in the Jupyter Notebook
        display(Audio(filename))
        
    except Exception as e:
        print(f"An error occurred: {e}")

# Example usage in Jupyter Notebook
if __name__ == "__main__":
    # Input text and languages
    text = input("Enter the text you want to translate: ")
    print(""" 
'af': Afrikaans,
'sq': Albania,
'am': Amharic ,
'ar': Arabic,
'hy': Armenian,
'az': Azerbaijani,
'eu': Basqu,
'be': Belarusian,
'bn': Bengali,
'bs': Bosnian,
'bg': Bulgarian
'ca': Catalan
'ceb': Cebuano
'ny': Chichewa
'zh-cn': Chinese (Simplified)
'zh-tw': Chinese (Traditional)
'co': Corsican
'hr': Croatian
'cs': Czech
'da': Danish
'nl': Dutch
'en': English
'eo': Esperanto
'et': Estonian
'tl': Filipino
'fi': Finnish
'fr': French
'fy': Frisian
'gl': Galician
'ka': Georgian
'de': German
'el': Greek
'gu': Gujarati
'ht': Haitian Creole
'ha': Hausa
'haw': Hawaiian
'he': Hebrew
'hi': Hindi
'hmn': Hmong
'hu': Hungarian
'is': Icelandic
'ig': Igbo
'id': Indonesian
'ga': Irish
'it': Italian
'ja': Japanese
'jw': Javanese
'kn': Kannada
'kk': Kazakh
'km': Khmer
'rw': Kinyarwanda
'ko': Korean
'ku': Kurdish (Kurmanji)
'ky': Kyrgyz
'lo': Lao
'la': Latin
'lv': Latvian
'lt': Lithuanian
'lb': Luxembourgish
'mk': Macedonian
'mg': Malagasy
'ms': Malay
'ml': Malayalam
'mt': Maltese
'mi': Maori
'mr': Marathi
'mn': Mongolian
'my': Myanmar (Burmese)
'ne': Nepali
'no': Norwegian
'or': Odia (Oriya)
'ps': Pashto
'fa': Persian
'pl': Polish
'pt': Portuguese
'pa': Punjabi
'ro': Romanian
'ru': Russian
'sm': Samoan
'gd': Scots Gaelic
'sr': Serbian
'st': Sesotho
'sn': Shona
'sd': Sindhi
'si': Sinhala
'sk': Slovak
'sl': Slovenian
'so': Somali
'es': Spanish
'su': Sundanese
'sw': Swahili
'sv': Swedish
'tg': Tajik
'ta': Tamil
'tt': Tatar
'te': Telugu
'th': Thai
'tr': Turkish
'tk': Turkmen
'uk': Ukrainian
'ur': Urdu
'ug': Uyghur
'uz': Uzbek
'vi': Vietnamese
'cy': Welsh
'xh': Xhosa
'yi': Yiddish
'yo': Yoruba
'zu': Zulu""")
    src_lang = input("Enter the source language code: ")
    dest_lang = input("Enter the destination language code : ")
    audio_filename = input("Enter the filename for the audio output (default is 'output.mp3'): ")
    
    # Use default filename if not provided
    if not audio_filename:
        audio_filename = 'output.mp3'
    
    # Translate text
    translated_text = translate_text(text, src_lang, dest_lang)
    
    if translated_text:
        print(f"Translated Text: {translated_text}")
        
        # Convert translated text to audio
        text_to_audio(translated_text, dest_lang, audio_filename)
